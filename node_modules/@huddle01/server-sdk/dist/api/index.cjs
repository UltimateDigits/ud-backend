"use strict";Object.defineProperty(exports, "__esModule", {value: true}); var _class;

var _chunkA324YZTZcjs = require('../chunk-A324YZTZ.cjs');


var _chunk4OMBN3XJcjs = require('../chunk-4OMBN3XJ.cjs');
require('../chunk-AITBUDWZ.cjs');

// src/api/index.ts
var logger = _chunkA324YZTZcjs.mainLogger.createSubLogger("API");
var API = (_class = class {
  
  constructor(data) {;_class.prototype.__init.call(this);_class.prototype.__init2.call(this);_class.prototype.__init3.call(this);_class.prototype.__init4.call(this);_class.prototype.__init5.call(this);_class.prototype.__init6.call(this);_class.prototype.__init7.call(this);
    logger.info("\u{1F514} Initializing Server SDK APIs");
    this.__apiKey = data.apiKey;
  }
  __init() {this.getRooms = async () => {
    try {
      const resp = await fetch(`${_chunk4OMBN3XJcjs.IRIKO_URL}/api/v1/get-rooms`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          "x-api-key": this.__apiKey
        }
      });
      if (resp.status === 401) {
        throw new Error("\u274C API key missing or invalid");
      }
      const res = await resp.json();
      return { data: res };
    } catch (error) {
      logger.error("\u274C Error in fetching rooms");
      logger.error(error);
      return {
        error: new Error("\u274C Error in fetching rooms")
      };
    }
  }}
  __init2() {this.getLiveMeetings = async () => {
    try {
      const resp = await fetch(`${_chunk4OMBN3XJcjs.IRIKO_URL}/api/v1/live-meetings`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          "x-api-key": this.__apiKey
        }
      });
      if (resp.status === 401) {
        throw new Error("\u274C API key missing or invalid");
      }
      const res = await resp.json();
      return { data: res };
    } catch (error) {
      logger.error("\u274C Error in fetching live meetings");
      logger.error(error);
      return {
        error: new Error("\u274C Error in fetching live meetings")
      };
    }
  }}
  __init3() {this.getMetrics = async () => {
    try {
      const resp = await fetch(`${_chunk4OMBN3XJcjs.IRIKO_URL}/api/v1/get-metrics`, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          "x-api-key": this.__apiKey
        }
      });
      if (resp.status === 401) {
        throw new Error("\u274C API key missing or invalid");
      }
      const res = await resp.json();
      return { data: res };
    } catch (error) {
      logger.error("\u274C Error in fetching API key metrics");
      logger.error(error);
      return {
        error: new Error("\u274C Error in fetching API key metrics")
      };
    }
  }}
  __init4() {this.createRoom = async (data) => {
    try {
      const resp = await fetch(`${_chunk4OMBN3XJcjs.IRIKO_URL}/api/v1/create-room`, {
        method: "POST",
        body: JSON.stringify(data),
        headers: {
          "Content-Type": "application/json",
          "x-api-key": this.__apiKey
        }
      });
      if (resp.status === 401) {
        throw new Error("API key missing or invalid");
      }
      const res = await resp.json();
      return { data: res };
    } catch (error) {
      logger.error("\u274C Error in creating room");
      logger.error(error);
      return {
        error: new Error("\u274C Error in creating room")
      };
    }
  }}
  __init5() {this.getRoomDetails = async (data) => {
    try {
      const resp = await fetch(
        `${_chunk4OMBN3XJcjs.IRIKO_URL}/api/v1/room-details/${data.roomId}`,
        {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            "x-api-key": this.__apiKey
          }
        }
      );
      if (resp.status === 401) {
        throw new Error("\u274C API key missing or invalid");
      }
      const res = await resp.json();
      return { data: res };
    } catch (error) {
      logger.error("\u274C Error in fetching room details");
      logger.error(error);
      return {
        error: new Error("\u274C Error in fetching room details")
      };
    }
  }}
  __init6() {this.getRoomMeetings = async (data) => {
    try {
      const resp = await fetch(
        `${_chunk4OMBN3XJcjs.IRIKO_URL}/api/v1/rooms/meetings?roomId=${data.roomId}`,
        {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            "x-api-key": this.__apiKey
          }
        }
      );
      if (resp.status === 401) {
        throw new Error("\u274C API key missing or invalid");
      }
      const res = await resp.json();
      return { data: res };
    } catch (error) {
      logger.error("\u274C Error in fetching room meetings list");
      logger.error(error);
      return {
        error: new Error("\u274C Error in fetching room meetings list")
      };
    }
  }}
  __init7() {this.getParticipants = async (data) => {
    try {
      const resp = await fetch(
        `${_chunk4OMBN3XJcjs.IRIKO_URL}/api/v1/rooms/participant-list?meetingId=${data.meetingId}`,
        {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            "x-api-key": this.__apiKey
          }
        }
      );
      if (resp.status === 401) {
        throw new Error("\u274C API key missing or invalid");
      }
      const res = await resp.json();
      return { data: res };
    } catch (error) {
      logger.error("\u274C Error in fetching meeting participants list");
      logger.error(error);
      return {
        error: new Error("\u274C Error in fetching meeting participants list")
      };
    }
  }}
}, _class);


exports.API = API;
