import { z } from 'zod';

declare const getRecordingsInputSchema: z.ZodObject<{
    limit: z.ZodOptional<z.ZodNumber>;
    cursor: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    limit?: number | undefined;
    cursor?: number | undefined;
}, {
    limit?: number | undefined;
    cursor?: number | undefined;
}>;
declare const apiKeyRecordingsSchema: z.ZodObject<{
    nextCursor: z.ZodNullable<z.ZodNumber>;
    recordings: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        recordingUrl: z.ZodString;
        recordingSize: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        id: string;
        recordingUrl: string;
        recordingSize: number;
    }, {
        id: string;
        recordingUrl: string;
        recordingSize: number;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    nextCursor: number | null;
    recordings: {
        id: string;
        recordingUrl: string;
        recordingSize: number;
    }[];
}, {
    nextCursor: number | null;
    recordings: {
        id: string;
        recordingUrl: string;
        recordingSize: number;
    }[];
}>;

export { apiKeyRecordingsSchema, getRecordingsInputSchema };
